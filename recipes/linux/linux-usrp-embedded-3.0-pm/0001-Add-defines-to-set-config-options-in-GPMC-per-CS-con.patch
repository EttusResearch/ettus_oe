From 8cb09c8cf67696adece6fff34d873c1b05c7cddb Mon Sep 17 00:00:00 2001
From: Philip Balister <balister@nomad.(none)>
Date: Wed, 17 Feb 2010 14:51:39 -0800
Subject: [PATCH 1/5] Add defines to set config options in GPMC per CS control
 registers.

---
 arch/arm/plat-omap/include/plat/gpmc.h |   29 +++++++++++++++++++++++++++++
 1 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/arch/arm/plat-omap/include/plat/gpmc.h b/arch/arm/plat-omap/include/plat/gpmc.h
index 1527929..889f80c 100644
--- a/arch/arm/plat-omap/include/plat/gpmc.h
+++ b/arch/arm/plat-omap/include/plat/gpmc.h
@@ -94,6 +94,35 @@ enum omap_ecc {
 	OMAP_ECC_HAMMING_CODE_HW_ROMCODE, /* gpmc method & romcode layout */
 };
 
+#define GPMC_CONFIG2_CSWROFFTIME(val)	((val & 31) << 16)
+#define GPMC_CONFIG2_CSRDOFFTIME(val)	((val & 31) << 8)
+#define GPMC_CONFIG2_CSEXTRADELAY	(1 << 7)
+#define GPMC_CONFIG2_CSONTIME(val)	(val & 15)
+
+#define GPMC_CONFIG3_ADVWROFFTIME(val)	((val & 31) << 16)
+#define GPMC_CONFIG3_ADVRDOFFTIME(val)	((val & 31) << 8)
+#define GPMC_CONFIG3_ADVEXTRADELAY	(1 << 7)
+#define GPMC_CONFIG3_ADVONTIME(val)	(val & 15)
+
+#define GPMC_CONFIG4_WEOFFTIME(val)	((val & 31) << 24)
+#define GPMC_CONFIG4_WEEXTRADELAY	(1 << 23)
+#define GPMC_CONFIG4_WEONTIME(val)	((val & 15) << 16)
+#define GPMC_CONFIG4_OEOFFTIME(val)	((val & 31) << 8)
+#define GPMC_CONFIG4_OEEXTRADELAY	(1 << 7)
+#define GPMC_CONFIG4_OEONTIME(val)	(val & 15)
+
+#define GPMC_CONFIG5_PAGEBURSTACCESSTIME(val)	((val & 15) << 24)
+#define GPMC_CONFIG5_RDACCESSTIME(val)	((val & 31) << 16)
+#define GPMC_CONFIG5_WRCYCLETIME(val)	((val & 31) << 8)
+#define GPMC_CONFIG5_RDCYCLETIME(val)	(val & 31)
+
+#define GPMC_CONFIG6_WRACCESSTIME(val)	((val & 31) << 24)
+#define GPMC_CONFIG6_WRDATAONADMUXBUS(val)	((val & 15) << 16)
+#define GPMC_CONFIG6_CYCLE2CYCLEDELAY(val)	((val & 15) << 8)
+#define GPMC_CONFIG6_CYCLE2CYCLESAMECSEN	(1 << 7)
+#define GPMC_CONFIG6_CYCLE2CYCLEDIFFCSEN	(1 << 6)
+#define GPMC_CONFIG6_BUSTURNAROUND(val)	(val & 15)
+
 /*
  * Note that all values in this struct are in nanoseconds except sync_clk
  * (which is in picoseconds), while the register values are in gpmc_fck cycles.
-- 
1.7.4.4

