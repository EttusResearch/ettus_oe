From f3ce5ed55b8200f3ef20c1e5db594d1cc0145cc3 Mon Sep 17 00:00:00 2001
From: Philip Balister <philip@balister.org>
Date: Thu, 14 Mar 2013 13:19:58 -0400
Subject: [PATCH] usrp_e : Extend data and control write cycle to fix S's.

Signed-off-by: Philip Balister <philip@balister.org>
---
 arch/arm/mach-omap2/board-overo.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/arch/arm/mach-omap2/board-overo.c b/arch/arm/mach-omap2/board-overo.c
index 0acf0e1..ef95e69 100644
--- a/arch/arm/mach-omap2/board-overo.c
+++ b/arch/arm/mach-omap2/board-overo.c
@@ -688,7 +688,7 @@ static void __init usrp1_e_init(void)
 	// CS signal timing parameter configuration
 	tmp = 0;
 	tmp |= GPMC_CONFIG2_CSONTIME(0);         /*  1 */
-	tmp |= GPMC_CONFIG2_CSWROFFTIME(3);     /* 16 */
+	tmp |= GPMC_CONFIG2_CSWROFFTIME(6);     /* 16 */
 	tmp |= GPMC_CONFIG2_CSRDOFFTIME(6);     /* 16 */
 	printk("GPMC_CONFIG2 reg: %x\n", tmp);
 	gpmc_cs_write_reg(4, GPMC_CS_CONFIG2, tmp);
@@ -707,8 +707,8 @@ static void __init usrp1_e_init(void)
 #if 1
 	// nWE and nOE signals timing parameter configuration
 	tmp = 0;
-	tmp |= GPMC_CONFIG4_WEONTIME(0);      /*  3 */
-	tmp |= GPMC_CONFIG4_WEOFFTIME(3);     /* 16 */
+	tmp |= GPMC_CONFIG4_WEONTIME(3);      /*  3 */
+	tmp |= GPMC_CONFIG4_WEOFFTIME(6);     /* 16 */
 	tmp |= GPMC_CONFIG4_OEONTIME(1);      /*  3 */
 	tmp |= GPMC_CONFIG4_OEOFFTIME(5);     /* 16 */
 	printk("GPMC_CONFIG4 reg: %x\n", tmp);
@@ -720,7 +720,7 @@ static void __init usrp1_e_init(void)
 	tmp = 0;
 	tmp |= GPMC_CONFIG5_PAGEBURSTACCESSTIME(1);
 	tmp |= GPMC_CONFIG5_RDACCESSTIME(3);           /* 15 */
-	tmp |= GPMC_CONFIG5_WRCYCLETIME(3);           /* 17 */
+	tmp |= GPMC_CONFIG5_WRCYCLETIME(6);           /* 17 */
 	tmp |= GPMC_CONFIG5_RDCYCLETIME(6);           /* 17 */
 	printk("GPMC_CONFIG5 reg: %x\n", tmp);
 
@@ -730,7 +730,7 @@ static void __init usrp1_e_init(void)
 #if 1
 	// WrAccessTime WrDataOnADmuxBus, Cycle2Cycle, and BusTurnAround params
 	tmp = (1<<31);
-	tmp |= GPMC_CONFIG6_WRACCESSTIME(3);          /* 15 */
+	tmp |= GPMC_CONFIG6_WRACCESSTIME(6);          /* 15 */
 	tmp |= GPMC_CONFIG6_WRDATAONADMUXBUS(3);
 	tmp |= GPMC_CONFIG6_CYCLE2CYCLEDELAY(0);
 	tmp |= GPMC_CONFIG6_BUSTURNAROUND(0);
@@ -758,7 +758,7 @@ static void __init usrp1_e_init(void)
 	// CS signal timing parameter configuration
 	tmp = 0;
 	tmp |= GPMC_CONFIG2_CSONTIME(0);
-	tmp |= GPMC_CONFIG2_CSWROFFTIME(3);
+	tmp |= GPMC_CONFIG2_CSWROFFTIME(6);
 	tmp |= GPMC_CONFIG2_CSRDOFFTIME(6);
 	printk("GPMC_CONFIG2 reg: %x\n", tmp);
 	gpmc_cs_write_reg(6, GPMC_CS_CONFIG2, tmp);
@@ -777,8 +777,8 @@ static void __init usrp1_e_init(void)
 #if 1
 	// nWE and nOE signals timing parameter configuration
 	tmp = 0;
-	tmp |= GPMC_CONFIG4_WEONTIME(0);
-	tmp |= GPMC_CONFIG4_WEOFFTIME(3);
+	tmp |= GPMC_CONFIG4_WEONTIME(3);
+	tmp |= GPMC_CONFIG4_WEOFFTIME(6);
 	tmp |= GPMC_CONFIG4_OEONTIME(1);
 	tmp |= GPMC_CONFIG4_OEOFFTIME(5);
 	printk("GPMC_CONFIG4 reg: %x\n", tmp);
@@ -790,7 +790,7 @@ static void __init usrp1_e_init(void)
 	tmp = 0;
 	tmp |= GPMC_CONFIG5_PAGEBURSTACCESSTIME(1);
 	tmp |= GPMC_CONFIG5_RDACCESSTIME(3);
-	tmp |= GPMC_CONFIG5_WRCYCLETIME(3);
+	tmp |= GPMC_CONFIG5_WRCYCLETIME(6);
 	tmp |= GPMC_CONFIG5_RDCYCLETIME(6);
 	printk("GPMC_CONFIG5 reg: %x\n", tmp);
 	gpmc_cs_write_reg(6, GPMC_CS_CONFIG5, tmp);
@@ -799,7 +799,7 @@ static void __init usrp1_e_init(void)
 #if 1
 	// WrAccessTime WrDataOnADmuxBus, Cycle2Cycle, and BusTurnAround params
 	tmp = 0;
-	tmp |= GPMC_CONFIG6_WRACCESSTIME(3);
+	tmp |= GPMC_CONFIG6_WRACCESSTIME(6);
 	tmp |= GPMC_CONFIG6_WRDATAONADMUXBUS(3);
 	tmp |= GPMC_CONFIG6_CYCLE2CYCLEDELAY(0);
 	tmp |= GPMC_CONFIG6_BUSTURNAROUND(0);
-- 
1.7.11.7

